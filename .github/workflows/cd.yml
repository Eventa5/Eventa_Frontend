name: 構建與部署

on:
  push:
    branches: [develop]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/eventa-frontend

jobs:
  build-amd64:
    name: 建構 AMD64 映像
    runs-on: ubuntu-latest

    steps:
      - name: 檢出代碼
        uses: actions/checkout@v4

      - name: 設定 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登入 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 建構並推送 AMD64 映像
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:amd64
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-amd64,ignore-error=true
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-amd64,mode=max

  build-arm64:
    name: 建構 ARM64 映像
    runs-on: ubuntu-latest

    steps:
      - name: 檢出代碼
        uses: actions/checkout@v4

      - name: 啟用 QEMU（模擬器，ARM 架構需要）
        uses: docker/setup-qemu-action@v3

      - name: 設定 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登入 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 建構並推送 ARM64 映像
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:arm64
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-arm64,ignore-error=true
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache-arm64,mode=max

  merge-manifest:
    name: 合併映像為 multi-arch
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64] # 等兩個都建完才進行

    steps:
      - name: 登入 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 建立並推送 multi-arch manifest
        run: |
          docker manifest create ${{ env.IMAGE_NAME }}:latest \
            --amend ${{ env.IMAGE_NAME }}:amd64 \
            --amend ${{ env.IMAGE_NAME }}:arm64

          docker manifest push ${{ env.IMAGE_NAME }}:latest

  trigger-render:
    name: 觸發 Render 部署
    runs-on: ubuntu-latest
    needs: merge-manifest # 等 manifest 完成才推

    steps:
      - name: 發送部署請求
        run: curl -X GET "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
