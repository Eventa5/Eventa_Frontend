// This file is auto-generated by @hey-api/openapi-ts

export type ActivitiesResponse = {
  id?: number;
  title?: string;
  location?: string;
  cover?: string;
  isOnline?: boolean;
  startTime?: string;
  endTime?: string;
  status?: string;
};

export type ActivityResponse = {
  id?: number;
  organizationId?: number;
  cover?: string;
  title?: string;
  location?: string;
  startTime?: string;
  endTime?: string;
  isOnline?: boolean;
  tags?: Array<string>;
  status?: string;
  descriptionMd?: string;
  viewCount?: number;
  summary?: string;
  notes?: string;
  livestreamUrl?: string;
  /**
   * 活動設置目前的狀態
   */
  currentStep?: string;
  createdAt?: string;
  updatedAt?: string;
  categories?: Array<{
    id?: number;
    name?: string;
  }>;
  likeCount?: number;
  userStatus?: {
    isFavorite?: boolean;
    isRegistered?: boolean;
  };
};

export type CreateActivityRequest = {
  organizationId: number;
  isOnline: boolean;
  livestreamUrl?: string;
};

export type CreateActivityResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    currentStep?: string;
  };
};

export type PatchActivityTypeResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    currentStep?: string;
  };
};

export type PatchActivityCategoriesRequest = {
  categoryIds: Array<number>;
};

export type PatchActivityBasicRequest = {
  cover?: string;
  title?: string;
  location?: string;
  startTime?: string;
  endTime?: string;
  tags?: Array<string>;
};

export type PatchActivityContentRequest = {
  summary?: string;
  descriptionMd?: string;
  notes?: string;
};

export type PatchActivityResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    currentStep?: string;
  };
};

export type PatchActivityStatusResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    status?: string;
  };
};

export type EditActivityRequest = {
  cover?: string;
  title?: string;
  location?: string;
  startTime?: string;
  endTime?: string;
  isOnline?: boolean;
  livestreamUrl?: string;
  tags?: Array<string>;
  summary?: string;
  descriptionMd?: string;
  notes?: string;
  categoryIds?: Array<number>;
};

export type FavoriteActivityResponse = {
  message?: string;
  status?: boolean;
};

export type GetParticipantResponse = {
  id?: number;
  orderId?: string;
  status?: string;
  assignedName?: string;
  assignedEmail?: string;
  createdAt?: string;
  ticketType?: {
    id?: number;
    name?: string;
    price?: number;
  };
};

export type UploadCoverRequest = {
  /**
   * 使用者上傳的圖片檔案，僅接受 image*
   */
  cover?: Blob | File;
};

export type UploadCoverResponse = {
  status?: boolean;
  message?: string;
  data?: string;
};

export type CategoriesResponse = {
  id?: number;
  name?: string;
  icon?: string;
  image?: string;
};

export type ErrorResponse = {
  message?: string;
  status?: boolean;
};

export type PaginationResponse = {
  currentPage?: number;
  totalItems?: number;
  totalPages?: number;
  hasNextPage?: boolean;
  hasPrevPage?: boolean;
};

export type CurrencyResponse = {
  id?: string;
  code?: string;
  name?: string;
};

export type CreateCurrencyRequest = {
  code: string;
  name: string;
};

export type OrderResponse = {
  /**
   * 訂單 ID
   */
  id?: string;
  /**
   * 訂單狀態
   */
  status?: string;
  /**
   * 訂單支付時間，格式為 ISO 8601
   */
  paidAt?: string;
  /**
   * 訂單支付過期時間，格式為 ISO 8601
   */
  paidExpiredAt?: string;
  activity?: {
    /**
     * 活動標題
     */
    title?: string;
    /**
     * 活動地點
     */
    location?: string;
    /**
     * 活動開始時間，格式為 ISO 8601
     */
    startTime?: string;
    /**
     * 活動結束時間，格式為 ISO 8601
     */
    endTime?: string;
  };
  payment?: {
    /**
     * 支付方式
     */
    method?: string;
  };
};

export type OrderDetailResponse = {
  /**
   * 訂單 ID
   */
  id?: string;
  /**
   * 訂單支付時間，格式為 ISO 8601
   */
  paidAt?: string;
  /**
   * 訂單支付過期時間，格式為 ISO 8601
   */
  paidExpiredAt?: string;
  /**
   * 訂單狀態
   */
  status?: string;
  /**
   * 發票地址
   */
  invoiceAddress?: string | null;
  /**
   * 發票收件者名稱
   */
  invoiceReceiverName?: string | null;
  /**
   * 發票收件者電子郵件
   */
  invoiceReceiverEmail?: string | null;
  /**
   * 發票收件者電話號碼
   */
  invoiceReceiverPhoneNumber?: string | null;
  /**
   * 發票抬頭
   */
  invoiceTitle?: string | null;
  /**
   * 發票統一編號，長度需為 8 位數
   */
  invoiceTaxId?: string | null;
  /**
   * 發票載具
   */
  invoiceCarrier?: string | null;
  /**
   * 發票類型
   */
  invoiceType?: string;
  /**
   * 訂單創建時間，格式為 ISO 8601
   */
  createdAt?: string;
  user?: {
    /**
     * 使用者名稱
     */
    name?: string | null;
    /**
     * 使用者顯示名稱
     */
    displayName?: string | null;
    /**
     * 使用者電子郵件
     */
    email?: string | null;
    /**
     * 使用者電話號碼
     */
    phoneNumber?: string | null;
    /**
     * 使用者性別
     */
    gender?: string | null;
  };
  activity?: {
    /**
     * 活動標題
     */
    title?: string;
    /**
     * 活動標籤
     */
    tags?: string | null;
    categories?: Array<{
      /**
       * 活動類別 ID
       */
      id?: number;
      /**
       * 活動類別名稱
       */
      name?: string;
    }>;
    /**
     * 活動結束時間，格式為 ISO 8601
     */
    endTime?: string;
  };
  payment?: {
    /**
     * 支付方式
     */
    method?: string;
    /**
     * 實際支付金額
     */
    paidAmount?: number;
  };
  /**
   * 訂單中的票券列表
   */
  tickets?: Array<{
    /**
     * 票券 ID
     */
    id?: string;
    /**
     * 票券狀態
     */
    status?: string;
    /**
     * 退款截止時間，格式為 ISO 8601
     */
    refundDeadline?: string;
    /**
     * 指派的使用者 ID
     */
    assignedUserId?: number | null;
    /**
     * 指派的使用者名稱
     */
    assignedName?: string | null;
    /**
     * 指派的使用者電子郵件
     */
    assignedEmail?: string | null;
    ticketType?: {
      /**
       * 票種 ID
       */
      id?: number;
      /**
       * 票種名稱
       */
      name?: string;
      /**
       * 票種價格
       */
      price?: number;
      /**
       * 票種開始時間，格式為 ISO 8601
       */
      startTime?: string;
      /**
       * 票種結束時間，格式為 ISO 8601
       */
      endTime?: string;
    };
  }>;
};

export type CreateOrderResponse = {
  /**
   * 訂單 ID
   */
  id?: string;
  /**
   * 活動 ID
   */
  activityId?: number;
  /**
   * 訂單支付過期時間，格式為 ISO 8601
   */
  paidExpiredAt?: unknown;
  /**
   * 實際支付金額
   */
  paidAmount?: number;
  /**
   * 訂單狀態
   */
  status?: string;
  /**
   * 訂單創建時間，格式為 ISO 8601
   */
  createdAt?: unknown;
  /**
   * 發票資訊
   */
  invoice?: {
    /**
     * 發票地址
     */
    invoiceAddress?: string | null;
    /**
     * 發票收件者名稱
     */
    invoiceReceiverName?: string | null;
    /**
     * 發票收件者電話號碼
     */
    invoiceReceiverPhoneNumber?: string | null;
    /**
     * 發票收件者電子郵件
     */
    invoiceReceiverEmail?: string | null;
    /**
     * 發票統一編號，長度需為 8 位數
     */
    invoiceTaxId?: string | null;
    /**
     * 發票抬頭
     */
    invoiceTitle?: string | null;
    /**
     * 發票載具
     */
    invoiceCarrier?: string | null;
    /**
     * 發票類型
     */
    invoiceType?: string;
  };
};

export type CreateOrderRequest = {
  /**
   * 活動 ID
   */
  activityId: number;
  /**
   * 欲購買的票券
   */
  tickets: Array<{
    /**
     * 欲購買的其中或唯一票券的票種 ID
     */
    id?: number;
    /**
     * 欲購買的其中或唯一票券的數量
     */
    quantity?: number;
  }>;
  /**
   * 實際需支付金額
   */
  paidAmount: number;
  /**
   * 常用發票 ID
   */
  commonlyUsedInvoicesId?: number | null;
  /**
   * 發票資訊
   */
  invoice?: {
    /**
     * 常用發票發票地址
     */
    invoiceAddress?: string | null;
    /**
     * 常用發票收件者名稱
     */
    invoiceReceiverName?: string | null;
    /**
     * 常用發票收件者電話號碼
     */
    invoiceReceiverPhoneNumber?: string | null;
    /**
     * 常用發票收件者電子郵件
     */
    invoiceReceiverEmail?: string | null;
    /**
     * 常用發票統一編號，長度需為 8 位數
     */
    invoiceTaxId?: string | null;
    /**
     * 常用發票抬頭
     */
    invoiceTitle?: string | null;
    /**
     * 常用發票載具
     */
    invoiceCarrier?: string | null;
    /**
     * 常用發票類型，b2b 為企業發票，b2c 為個人發票
     */
    invoiceType?: string;
  };
};

export type OrganizationResponse = {
  id?: number;
  name?: string;
  avatar?: string;
  cover?: string;
  introduction?: string;
  phoneNumber?: string;
  countryCode?: string;
  ext?: string;
  officialSiteUrl?: string;
  email?: string;
  currency?: string;
};

export type CreateOrganizationRequest = {
  /**
   * 主辦單位名稱
   */
  name: string;
  /**
   * 主辦單位介紹
   */
  introduction?: string;
  /**
   * 主辦單位頭像連結
   */
  avatar?: string;
  /**
   * 主辦單位封面圖連結
   */
  cover?: string;
  /**
   * 電話號碼
   */
  phoneNumber?: string;
  /**
   * 國家代碼
   */
  countryCode?: string;
  /**
   * 分機號碼
   */
  ext?: string;
  /**
   * 主辦單位電子郵件
   */
  email: string;
  /**
   * 官方網站網址
   */
  officialSiteUrl?: string;
};

export type CreateOrganizationResponse = {
  message?: string;
  status?: boolean;
  /**
   * 創建的主辦單位ID
   */
  data?: number;
};

export type UpdateOrganizationRequest = {
  /**
   * 主辦單位ID
   */
  id: number;
  /**
   * 主辦單位名稱
   */
  name?: string;
  /**
   * 主辦單位介紹
   */
  introduction?: string;
  /**
   * 主辦單位頭像連結
   */
  avatar?: string;
  /**
   * 主辦單位封面圖連結
   */
  cover?: string;
  /**
   * 電話號碼
   */
  phoneNumber?: string;
  /**
   * 國家代碼
   */
  countryCode?: string;
  /**
   * 分機號碼
   */
  ext?: string;
  /**
   * 主辦單位電子郵件
   */
  email?: string;
  /**
   * 官方網站網址
   */
  officialSiteUrl?: string;
};

export type UpdateOrganizationResponse = {
  message?: string;
  status?: boolean;
};

export type DeleteOrganizationRequest = {
  /**
   * 主辦單位ID
   */
  id: number;
};

export type DeleteOrganizationResponse = {
  message?: string;
  status?: boolean;
};

export type UploadOrganizationImageRequest = {
  /**
   * 主辦單位主圖，僅接受 image*
   */
  avatar?: Blob | File;
  /**
   * 主辦單位封面照片，僅接受 image*
   */
  cover?: Blob | File;
};

export type UploadOrganizationImageResponse = {
  status?: boolean;
  message?: string;
  data?: {
    avatar?: string;
    cover?: string;
  };
};

export type TicketTypeResponse = {
  /**
   * 票種 id
   */
  id?: number;
  /**
   * 對應活動 id，應與傳入的一致
   */
  activityId?: number;
  /**
   * 票種名稱，如 一般票、早鳥票、特殊票
   */
  name?: string;
  /**
   * 票種價格
   */
  price?: number;
  /**
   * 票種總數量
   */
  totalQuantity?: number;
  /**
   * 票種剩餘數量
   */
  remainingQuantity?: number;
  /**
   * 票種描述，可為 null
   */
  description?: string | null;
  /**
   * 開賣時間，格式為 ISO 8601
   */
  startTime?: string;
  /**
   * 開賣結束時間，格式為 ISO 8601
   */
  endTime?: string;
  /**
   * 開賣時間，格式為 ISO 8601
   */
  saleStartAt?: string | null;
  /**
   * 開賣結束時間，格式為 ISO 8601
   */
  saleEndAt?: string | null;
  /**
   * 是否為活動中
   */
  isActive?: boolean;
  /**
   * 創建時間，格式為 ISO 8601
   */
  createdAt?: string;
  /**
   * 更新時間，格式為 ISO 8601
   */
  updatedAt?: string;
};

export type TicketTypeRequestSchema = {
  /**
   * 票種名稱，如 一般票、早鳥票、特殊票
   */
  name: string;
  /**
   * 票種價格，不可小於 0
   */
  price: number;
  /**
   * 票種總數量，不可小於 0
   */
  totalQuantity: number;
  /**
   * 票種剩餘數量，不可大於總數量（totalQuantity）
   */
  remainingQuantity: number;
  /**
   * 票種描述，可為 null 或 undefined
   */
  description?: string | null;
  /**
   * 開賣時間，格式為 ISO 8601
   */
  startTime: string;
  /**
   * 開賣結束時間，格式為 ISO 8601
   */
  endTime: string;
  /**
   * 是否為活動中
   */
  isActive?: boolean;
};

export type UserResponse = {
  id?: string;
  memberId?: string;
  email?: string;
  name?: string | null;
  avatar?: string | null;
  displayName?: string | null;
  birthday?: string | null;
  gender?: string | null;
  phoneNumber?: string | null;
  countryCode?: string | null;
  region?: string | null;
  address?: string | null;
  identity?: string | null;
  createdAt?: string;
};

export type LoginRequest = {
  /**
   * 使用者電子郵件地址
   */
  email: string;
  /**
   * 使用者密碼
   */
  password: string;
};

export type LoginResponse = {
  message?: string;
  status?: boolean;
  /**
   * JWT Token
   */
  data?: string;
};

export type ForgetRequestSchema = {
  /**
   * 用戶電子郵件地址
   */
  email: string;
};

export type ResetPasswordRequestSchema = {
  /**
   * 新的密碼
   */
  newPassword: string;
  /**
   * 確認新密碼
   */
  confirmNewPassword: string;
  /**
   * 重設密碼令牌
   */
  resetToken: string;
};

export type ResetPasswordResponse = {
  message?: string;
  status?: boolean;
};

export type GoogleOAuthResponse = {
  message?: string;
  status?: boolean;
  /**
   * JWT Token
   */
  data?: string;
};

export type SignupRequest = {
  /**
   * 用戶電子郵件，將作為登入帳號
   */
  email: string;
  /**
   * 用戶密碼
   */
  password: string;
  /**
   * 確認密碼，必須與密碼一致
   */
  checkPassword: string;
};

export type SignupResponse = {
  message?: string;
  status?: boolean;
};

export type UpdateProfileRequest = {
  /**
   * 用戶真實姓名
   */
  name?: string;
  /**
   * 用戶電子郵件
   */
  email?: string;
  /**
   * 用戶頭像 URL
   */
  avatar?: string;
  /**
   * 用戶顯示名稱
   */
  displayName?: string;
  /**
   * 用戶生日 (格式: YYYY/MM/DD)
   */
  birthday?: string;
  /**
   * 性別
   */
  gender?: string;
  /**
   * 電話號碼
   */
  phoneNumber?: string;
  /**
   * 國家代碼
   */
  countryCode?: string;
  /**
   * 地區
   */
  region?: string;
  /**
   * 地址
   */
  address?: string;
  /**
   * 身分識別
   */
  identity?: string;
};

export type UpdateProfileResponse = {
  message?: string;
  status?: boolean;
};

export type UploadAvatarRequest = {
  /**
   * 使用者上傳的圖片檔案，僅接受 image*
   */
  avatar?: Blob | File;
};

export type UploadAvatarResponse = {
  status?: boolean;
  message?: string;
  data?: string;
};

export type GetApiV1ActivitiesPopularData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * 每頁資料筆數（預設為 6）
     */
    limit?: number;
  };
  url: "/api/v1/activities/popular";
};

export type GetApiV1ActivitiesPopularErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
};

export type GetApiV1ActivitiesPopularError =
  GetApiV1ActivitiesPopularErrors[keyof GetApiV1ActivitiesPopularErrors];

export type GetApiV1ActivitiesPopularResponses = {
  /**
   * 成功獲取活動資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<ActivitiesResponse>;
  };
};

export type GetApiV1ActivitiesPopularResponse =
  GetApiV1ActivitiesPopularResponses[keyof GetApiV1ActivitiesPopularResponses];

export type GetApiV1ActivitiesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * 當前頁數（預設為 1）
     */
    page?: number;
    /**
     * 每頁資料筆數（預設為 8）
     */
    limit?: number;
    /**
     * 類別 ID
     */
    categoryId?: number;
    /**
     * 地點關鍵字
     */
    location?: string;
    /**
     * 起始時間（格式：YYYY-MM-DD）
     */
    startTime?: string;
    /**
     * 結束時間（格式：YYYY-MM-DD）
     */
    endTime?: string;
    /**
     * 活動關鍵字（標題或內容）
     */
    keyword?: string;
    /**
     * 主辦單位 ID
     */
    organizationId?: number;
    /**
     * 活動狀態 draft | published | ended | canceled
     */
    status?: string;
  };
  url: "/api/v1/activities";
};

export type GetApiV1ActivitiesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
};

export type GetApiV1ActivitiesError = GetApiV1ActivitiesErrors[keyof GetApiV1ActivitiesErrors];

export type GetApiV1ActivitiesResponses = {
  /**
   * 成功獲取活動資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<ActivitiesResponse>;
    pagination?: PaginationResponse;
  };
};

export type GetApiV1ActivitiesResponse =
  GetApiV1ActivitiesResponses[keyof GetApiV1ActivitiesResponses];

export type PostApiV1ActivitiesData = {
  body: CreateActivityRequest;
  path?: never;
  query?: never;
  url: "/api/v1/activities";
};

export type PostApiV1ActivitiesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PostApiV1ActivitiesError = PostApiV1ActivitiesErrors[keyof PostApiV1ActivitiesErrors];

export type PostApiV1ActivitiesResponses = {
  /**
   * 成功新增一筆活動資料
   */
  201: CreateActivityResponse;
};

export type PostApiV1ActivitiesResponse =
  PostApiV1ActivitiesResponses[keyof PostApiV1ActivitiesResponses];

export type GetApiV1ActivitiesByActivityIdTicketTypesData = {
  body?: never;
  path: {
    /**
     * 當前活動的 id
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes";
};

export type GetApiV1ActivitiesByActivityIdTicketTypesErrors = {
  /**
   * 未登入或無效 token
   */
  401: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
  /**
   * 伺服器錯誤，請稍後再試
   */
  500: ErrorResponse;
};

export type GetApiV1ActivitiesByActivityIdTicketTypesError =
  GetApiV1ActivitiesByActivityIdTicketTypesErrors[keyof GetApiV1ActivitiesByActivityIdTicketTypesErrors];

export type GetApiV1ActivitiesByActivityIdTicketTypesResponses = {
  /**
   * 該活動的所有票種資訊，為一個陣列
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<TicketTypeResponse>;
  };
};

export type GetApiV1ActivitiesByActivityIdTicketTypesResponse =
  GetApiV1ActivitiesByActivityIdTicketTypesResponses[keyof GetApiV1ActivitiesByActivityIdTicketTypesResponses];

export type PostApiV1ActivitiesByActivityIdTicketTypesData = {
  /**
   * 票種資料，可同時多張新增，最少要有一張
   */
  body: Array<TicketTypeRequestSchema>;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes";
};

export type PostApiV1ActivitiesByActivityIdTicketTypesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 非主辦單位，無法新增票種
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PostApiV1ActivitiesByActivityIdTicketTypesError =
  PostApiV1ActivitiesByActivityIdTicketTypesErrors[keyof PostApiV1ActivitiesByActivityIdTicketTypesErrors];

export type PostApiV1ActivitiesByActivityIdTicketTypesResponses = {
  /**
   * 新增票種成功，產生資料的筆數
   */
  201: {
    message?: string;
    status?: boolean;
    /**
     * 成功新增票種的數量
     */
    data?: string;
  };
};

export type PostApiV1ActivitiesByActivityIdTicketTypesResponse =
  PostApiV1ActivitiesByActivityIdTicketTypesResponses[keyof PostApiV1ActivitiesByActivityIdTicketTypesResponses];

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
    /**
     * 需要刪除的票種 id
     */
    ticketTypeId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes/{ticketTypeId}";
};

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 非主辦單位，無法刪除票種
   */
  403: ErrorResponse;
  /**
   * 活動不存在、該票種不存在、該票種不屬於此活動
   */
  404: ErrorResponse;
};

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdError =
  DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors[keyof DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors];

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses = {
  /**
   * 刪除票種成功
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponse =
  DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses[keyof DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses];

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdData = {
  /**
   * 編輯單一票種資料
   */
  body: TicketTypeRequestSchema;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
    /**
     * 需要修改的票種 id
     */
    ticketTypeId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes/{ticketTypeId}";
};

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 非主辦單位，無法編輯票種
   */
  403: ErrorResponse;
  /**
   * 活動不存在、該票種不存在、該票種不屬於此活動
   */
  404: ErrorResponse;
};

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdError =
  PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors[keyof PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors];

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses = {
  /**
   * 更新票種成功
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponse =
  PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses[keyof PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses];

export type GetApiV1ActivitiesByActivityIdParticipantsData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: {
    /**
     * 當前頁數（預設為 1）
     */
    page?: number;
    /**
     * 每頁資料筆數（預設為 10）
     */
    limit?: number;
  };
  url: "/api/v1/activities/{activityId}/participants";
};

export type GetApiV1ActivitiesByActivityIdParticipantsErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type GetApiV1ActivitiesByActivityIdParticipantsError =
  GetApiV1ActivitiesByActivityIdParticipantsErrors[keyof GetApiV1ActivitiesByActivityIdParticipantsErrors];

export type GetApiV1ActivitiesByActivityIdParticipantsResponses = {
  /**
   * 成功獲取活動資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<GetParticipantResponse>;
    pagination?: PaginationResponse;
  };
};

export type GetApiV1ActivitiesByActivityIdParticipantsResponse =
  GetApiV1ActivitiesByActivityIdParticipantsResponses[keyof GetApiV1ActivitiesByActivityIdParticipantsResponses];

export type GetApiV1ActivitiesByActivityIdData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}";
};

export type GetApiV1ActivitiesByActivityIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type GetApiV1ActivitiesByActivityIdError =
  GetApiV1ActivitiesByActivityIdErrors[keyof GetApiV1ActivitiesByActivityIdErrors];

export type GetApiV1ActivitiesByActivityIdResponses = {
  /**
   * 請求成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: ActivityResponse;
  };
};

export type GetApiV1ActivitiesByActivityIdResponse =
  GetApiV1ActivitiesByActivityIdResponses[keyof GetApiV1ActivitiesByActivityIdResponses];

export type PutApiV1ActivitiesByActivityIdData = {
  body: EditActivityRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}";
};

export type PutApiV1ActivitiesByActivityIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PutApiV1ActivitiesByActivityIdError =
  PutApiV1ActivitiesByActivityIdErrors[keyof PutApiV1ActivitiesByActivityIdErrors];

export type PutApiV1ActivitiesByActivityIdResponses = {
  /**
   * 成功更新活動資料
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type PutApiV1ActivitiesByActivityIdResponse =
  PutApiV1ActivitiesByActivityIdResponses[keyof PutApiV1ActivitiesByActivityIdResponses];

export type DeleteApiV1ActivitiesByActivityIdFavoriteData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/favorite";
};

export type DeleteApiV1ActivitiesByActivityIdFavoriteErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type DeleteApiV1ActivitiesByActivityIdFavoriteError =
  DeleteApiV1ActivitiesByActivityIdFavoriteErrors[keyof DeleteApiV1ActivitiesByActivityIdFavoriteErrors];

export type DeleteApiV1ActivitiesByActivityIdFavoriteResponses = {
  /**
   * 活動已取消收藏
   */
  201: FavoriteActivityResponse;
};

export type DeleteApiV1ActivitiesByActivityIdFavoriteResponse =
  DeleteApiV1ActivitiesByActivityIdFavoriteResponses[keyof DeleteApiV1ActivitiesByActivityIdFavoriteResponses];

export type PostApiV1ActivitiesByActivityIdFavoriteData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/favorite";
};

export type PostApiV1ActivitiesByActivityIdFavoriteErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PostApiV1ActivitiesByActivityIdFavoriteError =
  PostApiV1ActivitiesByActivityIdFavoriteErrors[keyof PostApiV1ActivitiesByActivityIdFavoriteErrors];

export type PostApiV1ActivitiesByActivityIdFavoriteResponses = {
  /**
   * 活動已加入收藏
   */
  201: FavoriteActivityResponse;
};

export type PostApiV1ActivitiesByActivityIdFavoriteResponse =
  PostApiV1ActivitiesByActivityIdFavoriteResponses[keyof PostApiV1ActivitiesByActivityIdFavoriteResponses];

export type PostApiV1ActivitiesByActivityIdCoverData = {
  body: UploadCoverRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/cover";
};

export type PostApiV1ActivitiesByActivityIdCoverErrors = {
  /**
   * 錯誤的請求，例如沒有圖片、圖片上傳失敗等
   */
  400: ErrorResponse;
  /**
   * 未授權
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PostApiV1ActivitiesByActivityIdCoverError =
  PostApiV1ActivitiesByActivityIdCoverErrors[keyof PostApiV1ActivitiesByActivityIdCoverErrors];

export type PostApiV1ActivitiesByActivityIdCoverResponses = {
  /**
   * 上傳成功
   */
  200: UploadCoverResponse;
};

export type PostApiV1ActivitiesByActivityIdCoverResponse =
  PostApiV1ActivitiesByActivityIdCoverResponses[keyof PostApiV1ActivitiesByActivityIdCoverResponses];

export type PatchApiV1ActivitiesByActivityIdTypeData = {
  body: {
    isOnline: boolean;
    livestreamUrl?: string;
  };
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/type";
};

export type PatchApiV1ActivitiesByActivityIdTypeErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdTypeError =
  PatchApiV1ActivitiesByActivityIdTypeErrors[keyof PatchApiV1ActivitiesByActivityIdTypeErrors];

export type PatchApiV1ActivitiesByActivityIdTypeResponses = {
  /**
   * 編輯成功
   */
  200: PatchActivityTypeResponse;
};

export type PatchApiV1ActivitiesByActivityIdTypeResponse =
  PatchApiV1ActivitiesByActivityIdTypeResponses[keyof PatchApiV1ActivitiesByActivityIdTypeResponses];

export type PatchApiV1ActivitiesByActivityIdCategoriesData = {
  body: PatchActivityCategoriesRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/categories";
};

export type PatchApiV1ActivitiesByActivityIdCategoriesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdCategoriesError =
  PatchApiV1ActivitiesByActivityIdCategoriesErrors[keyof PatchApiV1ActivitiesByActivityIdCategoriesErrors];

export type PatchApiV1ActivitiesByActivityIdCategoriesResponses = {
  /**
   * 成功設定活動主題
   */
  200: PatchActivityResponse;
};

export type PatchApiV1ActivitiesByActivityIdCategoriesResponse =
  PatchApiV1ActivitiesByActivityIdCategoriesResponses[keyof PatchApiV1ActivitiesByActivityIdCategoriesResponses];

export type PatchApiV1ActivitiesByActivityIdBasicData = {
  body: PatchActivityBasicRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/basic";
};

export type PatchApiV1ActivitiesByActivityIdBasicErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdBasicError =
  PatchApiV1ActivitiesByActivityIdBasicErrors[keyof PatchApiV1ActivitiesByActivityIdBasicErrors];

export type PatchApiV1ActivitiesByActivityIdBasicResponses = {
  /**
   * 成功設定活動基本資料
   */
  200: PatchActivityResponse;
};

export type PatchApiV1ActivitiesByActivityIdBasicResponse =
  PatchApiV1ActivitiesByActivityIdBasicResponses[keyof PatchApiV1ActivitiesByActivityIdBasicResponses];

export type PatchApiV1ActivitiesByActivityIdContentData = {
  body: PatchActivityContentRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/content";
};

export type PatchApiV1ActivitiesByActivityIdContentErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdContentError =
  PatchApiV1ActivitiesByActivityIdContentErrors[keyof PatchApiV1ActivitiesByActivityIdContentErrors];

export type PatchApiV1ActivitiesByActivityIdContentResponses = {
  /**
   * 成功設定詳細內容
   */
  200: PatchActivityResponse;
};

export type PatchApiV1ActivitiesByActivityIdContentResponse =
  PatchApiV1ActivitiesByActivityIdContentResponses[keyof PatchApiV1ActivitiesByActivityIdContentResponses];

export type PatchApiV1ActivitiesByActivityIdPublishData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/publish";
};

export type PatchApiV1ActivitiesByActivityIdPublishErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdPublishError =
  PatchApiV1ActivitiesByActivityIdPublishErrors[keyof PatchApiV1ActivitiesByActivityIdPublishErrors];

export type PatchApiV1ActivitiesByActivityIdPublishResponses = {
  /**
   * 成功發布活動
   */
  200: PatchActivityStatusResponse;
};

export type PatchApiV1ActivitiesByActivityIdPublishResponse =
  PatchApiV1ActivitiesByActivityIdPublishResponses[keyof PatchApiV1ActivitiesByActivityIdPublishResponses];

export type PatchApiV1ActivitiesByActivityIdCancelData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/cancel";
};

export type PatchApiV1ActivitiesByActivityIdCancelErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdCancelError =
  PatchApiV1ActivitiesByActivityIdCancelErrors[keyof PatchApiV1ActivitiesByActivityIdCancelErrors];

export type PatchApiV1ActivitiesByActivityIdCancelResponses = {
  /**
   * 成功取消活動
   */
  200: PatchActivityStatusResponse;
};

export type PatchApiV1ActivitiesByActivityIdCancelResponse =
  PatchApiV1ActivitiesByActivityIdCancelResponses[keyof PatchApiV1ActivitiesByActivityIdCancelResponses];

export type GetApiV1CategoriesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/categories";
};

export type GetApiV1CategoriesErrors = {
  /**
   * 系統錯誤
   */
  500: ErrorResponse;
};

export type GetApiV1CategoriesError = GetApiV1CategoriesErrors[keyof GetApiV1CategoriesErrors];

export type GetApiV1CategoriesResponses = {
  /**
   * 請求成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<CategoriesResponse>;
  };
};

export type GetApiV1CategoriesResponse =
  GetApiV1CategoriesResponses[keyof GetApiV1CategoriesResponses];

export type GetApiV1CurrenciesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/currencies";
};

export type GetApiV1CurrenciesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
};

export type GetApiV1CurrenciesError = GetApiV1CurrenciesErrors[keyof GetApiV1CurrenciesErrors];

export type GetApiV1CurrenciesResponses = {
  /**
   * 請求成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<CurrencyResponse>;
  };
};

export type GetApiV1CurrenciesResponse =
  GetApiV1CurrenciesResponses[keyof GetApiV1CurrenciesResponses];

export type PostApiV1CurrenciesData = {
  body: CreateCurrencyRequest;
  path?: never;
  query?: never;
  url: "/api/v1/currencies";
};

export type PostApiV1CurrenciesErrors = {
  /**
   * Bad request
   */
  400: ErrorResponse;
};

export type PostApiV1CurrenciesError = PostApiV1CurrenciesErrors[keyof PostApiV1CurrenciesErrors];

export type PostApiV1CurrenciesResponses = {
  /**
   * 建立成功
   */
  201: {
    message?: string;
    status?: boolean;
    data?: CurrencyResponse;
  };
};

export type PostApiV1CurrenciesResponse =
  PostApiV1CurrenciesResponses[keyof PostApiV1CurrenciesResponses];

export type GetApiV1OrdersData = {
  body?: never;
  path?: never;
  query?: {
    page?: number;
    limit?: number;
    /**
     * 如果沒有提供，則返回所有狀態的訂單
     */
    status?: string;
    /**
     * 活動名稱關鍵字搜尋
     */
    title?: string;
    /**
     * 從何時（格式：YYYY-MM-DD）
     */
    from?: string;
    /**
     * 到何時（格式：YYYY-MM-DD）
     */
    to?: string;
  };
  url: "/api/v1/orders";
};

export type GetApiV1OrdersErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
};

export type GetApiV1OrdersError = GetApiV1OrdersErrors[keyof GetApiV1OrdersErrors];

export type GetApiV1OrdersResponses = {
  /**
   * 請求成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<OrderResponse>;
  };
};

export type GetApiV1OrdersResponse = GetApiV1OrdersResponses[keyof GetApiV1OrdersResponses];

export type PostApiV1OrdersData = {
  body: CreateOrderRequest;
  path?: never;
  query?: never;
  url: "/api/v1/orders";
};

export type PostApiV1OrdersErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PostApiV1OrdersError = PostApiV1OrdersErrors[keyof PostApiV1OrdersErrors];

export type PostApiV1OrdersResponses = {
  /**
   * 訂單創建成功
   */
  201: {
    message?: string;
    status?: boolean;
    data?: CreateOrderResponse;
  };
};

export type PostApiV1OrdersResponse = PostApiV1OrdersResponses[keyof PostApiV1OrdersResponses];

export type GetApiV1OrdersByOrderIdData = {
  body?: never;
  path: {
    orderId: string;
  };
  query?: never;
  url: "/api/v1/orders/{orderId}";
};

export type GetApiV1OrdersByOrderIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 訂單不存在
   */
  404: ErrorResponse;
};

export type GetApiV1OrdersByOrderIdError =
  GetApiV1OrdersByOrderIdErrors[keyof GetApiV1OrdersByOrderIdErrors];

export type GetApiV1OrdersByOrderIdResponses = {
  /**
   * 成功獲取訂單詳細資訊
   */
  200: {
    message?: string;
    status?: boolean;
    data?: OrderDetailResponse;
  };
};

export type GetApiV1OrdersByOrderIdResponse =
  GetApiV1OrdersByOrderIdResponses[keyof GetApiV1OrdersByOrderIdResponses];

export type PatchApiV1OrdersByOrderIdCancelData = {
  body?: never;
  path: {
    orderId: string;
  };
  query?: never;
  url: "/api/v1/orders/{orderId}/cancel";
};

export type PatchApiV1OrdersByOrderIdCancelErrors = {
  /**
   * 缺少訂單 id
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 訂單不存在
   */
  404: ErrorResponse;
  /**
   * 只能取消未付款的訂單
   */
  409: ErrorResponse;
};

export type PatchApiV1OrdersByOrderIdCancelError =
  PatchApiV1OrdersByOrderIdCancelErrors[keyof PatchApiV1OrdersByOrderIdCancelErrors];

export type PatchApiV1OrdersByOrderIdCancelResponses = {
  /**
   * 取消成功
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type PatchApiV1OrdersByOrderIdCancelResponse =
  PatchApiV1OrdersByOrderIdCancelResponses[keyof PatchApiV1OrdersByOrderIdCancelResponses];

export type DeleteApiV1OrganizationsData = {
  body: DeleteOrganizationRequest;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type DeleteApiV1OrganizationsErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 找不到主辦單位
   */
  404: ErrorResponse;
};

export type DeleteApiV1OrganizationsError =
  DeleteApiV1OrganizationsErrors[keyof DeleteApiV1OrganizationsErrors];

export type DeleteApiV1OrganizationsResponses = {
  /**
   * 刪除成功
   */
  200: DeleteOrganizationResponse;
};

export type DeleteApiV1OrganizationsResponse =
  DeleteApiV1OrganizationsResponses[keyof DeleteApiV1OrganizationsResponses];

export type GetApiV1OrganizationsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type GetApiV1OrganizationsErrors = {
  /**
   * 取得失敗
   */
  500: ErrorResponse;
};

export type GetApiV1OrganizationsError =
  GetApiV1OrganizationsErrors[keyof GetApiV1OrganizationsErrors];

export type GetApiV1OrganizationsResponses = {
  /**
   * 取得成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<OrganizationResponse>;
  };
};

export type GetApiV1OrganizationsResponse =
  GetApiV1OrganizationsResponses[keyof GetApiV1OrganizationsResponses];

export type PostApiV1OrganizationsData = {
  body: CreateOrganizationRequest;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type PostApiV1OrganizationsErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PostApiV1OrganizationsError =
  PostApiV1OrganizationsErrors[keyof PostApiV1OrganizationsErrors];

export type PostApiV1OrganizationsResponses = {
  /**
   * 創建成功
   */
  200: CreateOrganizationResponse;
};

export type PostApiV1OrganizationsResponse =
  PostApiV1OrganizationsResponses[keyof PostApiV1OrganizationsResponses];

export type PutApiV1OrganizationsData = {
  body: UpdateOrganizationRequest;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type PutApiV1OrganizationsErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 找不到主辦單位
   */
  404: ErrorResponse;
};

export type PutApiV1OrganizationsError =
  PutApiV1OrganizationsErrors[keyof PutApiV1OrganizationsErrors];

export type PutApiV1OrganizationsResponses = {
  /**
   * 更新成功
   */
  200: UpdateOrganizationResponse;
};

export type PutApiV1OrganizationsResponse =
  PutApiV1OrganizationsResponses[keyof PutApiV1OrganizationsResponses];

export type GetApiV1OrganizationsByOrganizationIdData = {
  body?: never;
  path: {
    /**
     * 主辦單位ID
     */
    organizationId: number;
  };
  query?: never;
  url: "/api/v1/organizations/{organizationId}";
};

export type GetApiV1OrganizationsByOrganizationIdErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 找不到主辦單位
   */
  404: ErrorResponse;
};

export type GetApiV1OrganizationsByOrganizationIdError =
  GetApiV1OrganizationsByOrganizationIdErrors[keyof GetApiV1OrganizationsByOrganizationIdErrors];

export type GetApiV1OrganizationsByOrganizationIdResponses = {
  /**
   * 取得成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: OrganizationResponse;
  };
};

export type GetApiV1OrganizationsByOrganizationIdResponse =
  GetApiV1OrganizationsByOrganizationIdResponses[keyof GetApiV1OrganizationsByOrganizationIdResponses];

export type PostApiV1OrganizationsByOrganizationIdImagesData = {
  body: UploadOrganizationImageRequest;
  path: {
    /**
     * 主辦 ID
     */
    organizationId: number;
  };
  query?: never;
  url: "/api/v1/organizations/{organizationId}/images";
};

export type PostApiV1OrganizationsByOrganizationIdImagesErrors = {
  /**
   * 錯誤的請求，例如沒有圖片、圖片上傳失敗等
   */
  400: ErrorResponse;
  /**
   * 未授權
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PostApiV1OrganizationsByOrganizationIdImagesError =
  PostApiV1OrganizationsByOrganizationIdImagesErrors[keyof PostApiV1OrganizationsByOrganizationIdImagesErrors];

export type PostApiV1OrganizationsByOrganizationIdImagesResponses = {
  /**
   * 上傳成功
   */
  200: UploadOrganizationImageResponse;
};

export type PostApiV1OrganizationsByOrganizationIdImagesResponse =
  PostApiV1OrganizationsByOrganizationIdImagesResponses[keyof PostApiV1OrganizationsByOrganizationIdImagesResponses];

export type PostApiV1UsersSignupData = {
  body: SignupRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/signup";
};

export type PostApiV1UsersSignupErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PostApiV1UsersSignupError =
  PostApiV1UsersSignupErrors[keyof PostApiV1UsersSignupErrors];

export type PostApiV1UsersSignupResponses = {
  /**
   * 註冊成功
   */
  201: SignupResponse;
};

export type PostApiV1UsersSignupResponse =
  PostApiV1UsersSignupResponses[keyof PostApiV1UsersSignupResponses];

export type PostApiV1UsersLoginData = {
  body: LoginRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/login";
};

export type PostApiV1UsersLoginErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PostApiV1UsersLoginError = PostApiV1UsersLoginErrors[keyof PostApiV1UsersLoginErrors];

export type PostApiV1UsersLoginResponses = {
  /**
   * 登入成功
   */
  200: LoginResponse;
};

export type PostApiV1UsersLoginResponse =
  PostApiV1UsersLoginResponses[keyof PostApiV1UsersLoginResponses];

export type GetApiV1UsersGoogleLoginData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/users/google/login";
};

export type GetApiV1UsersGoogleCallbackData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Google 授權碼
     */
    code?: string;
  };
  url: "/api/v1/users/google/callback";
};

export type GetApiV1UsersGoogleCallbackResponses = {
  /**
   * 認證成功，返回HTML頁面自動傳送結果給前端並關閉窗口
   */
  200: unknown;
};

export type PutApiV1UsersForgetData = {
  body: ForgetRequestSchema;
  path?: never;
  query?: never;
  url: "/api/v1/users/forget";
};

export type PutApiV1UsersForgetErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PutApiV1UsersForgetError = PutApiV1UsersForgetErrors[keyof PutApiV1UsersForgetErrors];

export type PutApiV1UsersForgetResponses = {
  /**
   * 發送成功
   */
  200: ResetPasswordResponse;
};

export type PutApiV1UsersForgetResponse =
  PutApiV1UsersForgetResponses[keyof PutApiV1UsersForgetResponses];

export type PutApiV1UsersResetPasswordData = {
  body: ResetPasswordRequestSchema;
  path?: never;
  query?: never;
  url: "/api/v1/users/resetPassword";
};

export type PutApiV1UsersResetPasswordErrors = {
  /**
   * 請求錯誤，可能是令牌過期或無效
   */
  400: ErrorResponse;
};

export type PutApiV1UsersResetPasswordError =
  PutApiV1UsersResetPasswordErrors[keyof PutApiV1UsersResetPasswordErrors];

export type PutApiV1UsersResetPasswordResponses = {
  /**
   * 更新成功
   */
  200: ResetPasswordResponse;
};

export type PutApiV1UsersResetPasswordResponse =
  PutApiV1UsersResetPasswordResponses[keyof PutApiV1UsersResetPasswordResponses];

export type GetApiV1UsersProfileData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/users/profile";
};

export type GetApiV1UsersProfileErrors = {
  /**
   * 未授權
   */
  401: ErrorResponse;
  /**
   * 用戶不存在
   */
  404: ErrorResponse;
};

export type GetApiV1UsersProfileError =
  GetApiV1UsersProfileErrors[keyof GetApiV1UsersProfileErrors];

export type GetApiV1UsersProfileResponses = {
  /**
   * 成功獲取用戶資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: UserResponse;
  };
};

export type GetApiV1UsersProfileResponse =
  GetApiV1UsersProfileResponses[keyof GetApiV1UsersProfileResponses];

export type PutApiV1UsersProfileData = {
  body?: UpdateProfileRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/profile";
};

export type PutApiV1UsersProfileErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 未授權
   */
  401: ErrorResponse;
  /**
   * 用戶不存在
   */
  404: ErrorResponse;
};

export type PutApiV1UsersProfileError =
  PutApiV1UsersProfileErrors[keyof PutApiV1UsersProfileErrors];

export type PutApiV1UsersProfileResponses = {
  /**
   * 更新成功
   */
  200: UpdateProfileResponse;
};

export type PutApiV1UsersProfileResponse =
  PutApiV1UsersProfileResponses[keyof PutApiV1UsersProfileResponses];

export type PostApiV1UsersProfileAvatarData = {
  body: UploadAvatarRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/profile/avatar";
};

export type PostApiV1UsersProfileAvatarErrors = {
  /**
   * 錯誤的請求，例如沒有圖片、圖片上傳失敗等
   */
  400: ErrorResponse;
  /**
   * 未授權
   */
  401: ErrorResponse;
};

export type PostApiV1UsersProfileAvatarError =
  PostApiV1UsersProfileAvatarErrors[keyof PostApiV1UsersProfileAvatarErrors];

export type PostApiV1UsersProfileAvatarResponses = {
  /**
   * 上傳成功
   */
  200: UploadAvatarResponse;
};

export type PostApiV1UsersProfileAvatarResponse =
  PostApiV1UsersProfileAvatarResponses[keyof PostApiV1UsersProfileAvatarResponses];

export type ClientOptions = {
  baseUrl: "https://eventa-backend-pgun.onrender.com" | (string & {});
};
