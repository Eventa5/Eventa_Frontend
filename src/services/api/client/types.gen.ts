// This file is auto-generated by @hey-api/openapi-ts

export type ActivitiesResponse = {
  id?: string;
  title?: string;
  location?: string;
  cover?: string;
  isOnline?: boolean;
  startTime?: string;
  endTime?: string;
  status?: string;
};

export type ActivityResponse = {
  id?: string;
  organizationId?: number;
  cover?: string;
  title?: string;
  location?: string;
  startTime?: string;
  endTime?: string;
  isOnline?: boolean;
  tags?: Array<string>;
  status?: string;
  descriptionMd?: string;
  viewCount?: number;
  summary?: string;
  notes?: string;
  livestreamUrl?: string;
  createdAt?: string;
  updatedAt?: string;
  categories?: Array<{
    id?: number;
    name?: string;
  }>;
  likeCount?: number;
  userStatus?: {
    isFavorited?: boolean;
    isRegistered?: boolean;
  };
};


export type CreateActivityRequest = {
  organizationId: number;
  isOnline: boolean;
  livestreamUrl?: string;
};

export type CreateActivityResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    currentStep?: string;
  };
};

export type PatchActivityCategoriesRequest = {
  categoryIds: Array<number>;
};

export type PatchActivityBasicRequest = {
  cover?: string;
  title?: string;
  location?: string;
  startTime?: string;
  endTime?: string;
  tags?: Array<string>;
};

export type PatchActivityContentRequest = {
  summary?: string;
  descriptionMd?: string;
  notes?: string;
};

export type PatchActivityResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    currentStep?: string;
  };
};

export type PatchActivityStatusResponse = {
  message?: string;
  status?: boolean;
  data?: {
    id?: number;
    status?: string;
  };
};

export type EditActivityRequest = {
  cover?: string;
  title?: string;
  location?: string;
  startTime?: string;
  endTime?: string;
  isOnline?: boolean;
  livestreamUrl?: string;
  tags?: Array<string>;
  summary?: string;
  descriptionMd?: string;
  notes?: string;
  categoryIds?: Array<number>;
};


export type ErrorResponse = {
  message?: string;
  status?: boolean;
};

export type PaginationResponse = {
  currentPage?: number;
  totalItems?: number;
  totalPage?: number;
  hasNextPage?: boolean;
  hasPrevPage?: boolean;
};

export type CurrencyResponse = {
  id?: string;
  code?: string;
  name?: string;
};

export type CreateCurrencyRequest = {
  code: string;
  name: string;
};

export type OrganizationResponse = {
  id?: number;
  name?: string;
  avatar?: string;
  cover?: string;
  introduction?: string;
  phoneNumber?: string;
  countryCode?: string;
  ext?: string;
  officialSiteUrl?: string;
  email?: string;
  currency?: string;
};

export type CreateOrganizationRequest = {
  /**
   * 主辦單位名稱
   */
  name: string;
  /**
   * 主辦單位介紹
   */
  introduction?: string;
  /**
   * 主辦單位頭像連結
   */
  avatar?: string;
  /**
   * 主辦單位封面圖連結
   */
  cover?: string;
  /**
   * 電話號碼
   */
  phoneNumber?: string;
  /**
   * 國家代碼
   */
  countryCode?: string;
  /**
   * 分機號碼
   */
  ext?: string;
  /**
   * 主辦單位電子郵件
   */
  email: string;
  /**
   * 官方網站網址
   */
  officialSiteUrl?: string;
};

export type CreateOrganizationResponse = {
  message?: string;
  status?: boolean;
  /**
   * 創建的主辦單位ID
   */
  data?: number;
};

export type UpdateOrganizationRequest = {
  /**
   * 主辦單位ID
   */
  id: number;
  /**
   * 主辦單位名稱
   */
  name?: string;
  /**
   * 主辦單位介紹
   */
  introduction?: string;
  /**
   * 主辦單位頭像連結
   */
  avatar?: string;
  /**
   * 主辦單位封面圖連結
   */
  cover?: string;
  /**
   * 電話號碼
   */
  phoneNumber?: string;
  /**
   * 國家代碼
   */
  countryCode?: string;
  /**
   * 分機號碼
   */
  ext?: string;
  /**
   * 主辦單位電子郵件
   */
  email?: string;
  /**
   * 官方網站網址
   */
  officialSiteUrl?: string;
};

export type UpdateOrganizationResponse = {
  message?: string;
  status?: boolean;
};

export type DeleteOrganizationRequest = {
  /**
   * 主辦單位ID
   */
  id: number;
};

export type DeleteOrganizationResponse = {
  message?: string;
  status?: boolean;
};

export type TicketTypeResponse = {
  /**
   * 票種 id
   */
  id?: number;
  /**
   * 對應活動 id，應與傳入的一致
   */
  activityId?: number;
  /**
   * 票種名稱，如 一般票、早鳥票、特殊票
   */
  name?: string;
  /**
   * 票種價格
   */
  price?: number;
  /**
   * 票種總數量
   */
  totalQuantity?: number;
  /**
   * 票種剩餘數量
   */
  remainingQuantity?: number;
  /**
   * 票種描述，可為 null
   */
  description?: string | null;
  /**
   * 開賣時間，格式為 ISO 8601
   */
  startTime?: string;
  /**
   * 開賣結束時間，格式為 ISO 8601
   */
  endTime?: string;
  /**
   * 開賣時間，格式為 ISO 8601
   */
  saleStartAt?: string | null;
  /**
   * 開賣結束時間，格式為 ISO 8601
   */
  saleEndAt?: string | null;
  /**
   * 是否為活動中
   */
  isActive?: boolean;
  /**
   * 創建時間，格式為 ISO 8601
   */
  createdAt?: string;
  /**
   * 更新時間，格式為 ISO 8601
   */
  updatedAt?: string;
};

export type TicketTypeRequestSchema = {
  /**
   * 票種名稱，如 一般票、早鳥票、特殊票
   */
  name: string;
  /**
   * 票種價格，不可小於 0
   */
  price: number;
  /**
   * 票種總數量，不可小於 0
   */
  totalQuantity: number;
  /**
   * 票種剩餘數量，不可大於總數量（totalQuantity）
   */
  remainingQuantity: number;
  /**
   * 票種描述，可為 null 或 undefined
   */
  description?: string | null;
  /**
   * 開賣時間，格式為 ISO 8601
   */
  startTime: string;
  /**
   * 開賣結束時間，格式為 ISO 8601
   */
  endTime: string;
  /**
   * 是否為活動中
   */
  isActive?: boolean;
};

export type UserResponse = {
  id?: string;
  memberId?: string;
  email?: string;
  name?: string | null;
  avatar?: string | null;
  displayName?: string | null;
  birthday?: string | null;
  gender?: string | null;
  phoneNumber?: string | null;
  countryCode?: string | null;
  region?: string | null;
  address?: string | null;
  identity?: string | null;
  createdAt?: string;
};

export type LoginRequest = {
  /**
   * 使用者電子郵件地址
   */
  email: string;
  /**
   * 使用者密碼
   */
  password: string;
};

export type LoginResponse = {
  message?: string;
  status?: boolean;
  /**
   * JWT Token
   */
  data?: string;
};

export type ForgetRequestSchema = {
  /**
   * 用戶電子郵件地址
   */
  email: string;
};

export type ResetPasswordRequestSchema = {
  /**
   * 新的密碼
   */
  newPassword: string;
  /**
   * 確認新密碼
   */
  confirmNewPassword: string;
  /**
   * 重設密碼令牌
   */
  resetToken: string;
};

export type ResetPasswordResponse = {
  message?: string;
  status?: boolean;
};

export type GoogleOAuthResponse = {
  message?: string;
  status?: boolean;
  /**
   * JWT Token
   */
  data?: string;
};

export type SignupRequest = {
  /**
   * 用戶電子郵件，將作為登入帳號
   */
  email: string;
  /**
   * 用戶密碼
   */
  password: string;
  /**
   * 確認密碼，必須與密碼一致
   */
  checkPassword: string;
};

export type SignupResponse = {
  message?: string;
  status?: boolean;
};

export type UpdateProfileRequest = {
  /**
   * 用戶真實姓名
   */
  name?: string;
  /**
   * 用戶電子郵件
   */
  email?: string;
  /**
   * 用戶頭像 URL
   */
  avatar?: string;
  /**
   * 用戶顯示名稱
   */
  displayName?: string;
  /**
   * 用戶生日 (格式: YYYY/MM/DD)
   */
  birthday?: string;
  /**
   * 性別
   */
  gender?: string;
  /**
   * 電話號碼
   */
  phoneNumber?: string;
  /**
   * 國家代碼
   */
  countryCode?: string;
  /**
   * 地區
   */
  region?: string;
  /**
   * 地址
   */
  address?: string;
  /**
   * 身分識別
   */
  identity?: string;
};

export type UpdateProfileResponse = {
  message?: string;
  status?: boolean;
};

export type UploadAvatarRequest = {
  /**
   * 使用者上傳的圖片檔案，僅接受 image*
   */
  avatar?: Blob | File;
};

export type UploadAvatarResponse = {
  status?: boolean;
  message?: string;
};

export type GetApiV1ActivitiesData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * 當前頁數（預設為 1）
     */
    page?: number;
    /**
     * 每頁資料筆數（預設為 8）
     */
    limit?: number;
    /**
     * 類別 ID
     */
    categoryId?: number;
    /**
     * 地點關鍵字
     */
    location?: string;
    /**
     * 起始時間（格式：YYYY-MM-DD）
     */
    startTime?: string;
    /**
     * 結束時間（格式：YYYY-MM-DD）
     */
    endTime?: string;
    /**
     * 活動關鍵字（標題或內容）
     */
    keyword?: string;
    /**
     * 主辦單位 ID
     */
    organizationId?: number;
    /**
     * 活動狀態 draft | published | ended | canceled
     */
    status?: string;
  };
  url: "/api/v1/activities";
};

export type GetApiV1ActivitiesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
};

export type GetApiV1ActivitiesError = GetApiV1ActivitiesErrors[keyof GetApiV1ActivitiesErrors];

export type GetApiV1ActivitiesResponses = {
  /**
   * 成功獲取活動資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<ActivitiesResponse>;
    pagination?: PaginationResponse;
  };
};

export type GetApiV1ActivitiesResponse =
  GetApiV1ActivitiesResponses[keyof GetApiV1ActivitiesResponses];

export type PostApiV1ActivitiesData = {
  body: CreateActivityRequest;
  path?: never;
  query?: never;
  url: "/api/v1/activities";
};

export type PostApiV1ActivitiesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PostApiV1ActivitiesError = PostApiV1ActivitiesErrors[keyof PostApiV1ActivitiesErrors];

export type PostApiV1ActivitiesResponses = {
  /**
   * 成功新增一筆活動資料
   */
  201: CreateActivityResponse;
};

export type PostApiV1ActivitiesResponse =
  PostApiV1ActivitiesResponses[keyof PostApiV1ActivitiesResponses];

export type GetApiV1ActivitiesByActivityIdTicketTypesData = {
  body?: never;
  path: {
    /**
     * 當前活動的 id
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes";
};

export type GetApiV1ActivitiesByActivityIdTicketTypesErrors = {
  /**
   * 未登入或無效 token
   */
  401: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
  /**
   * 伺服器錯誤，請稍後再試
   */
  500: ErrorResponse;
};

export type GetApiV1ActivitiesByActivityIdTicketTypesError =
  GetApiV1ActivitiesByActivityIdTicketTypesErrors[keyof GetApiV1ActivitiesByActivityIdTicketTypesErrors];

export type GetApiV1ActivitiesByActivityIdTicketTypesResponses = {
  /**
   * 該活動的所有票種資訊，為一個陣列
   */
  200: Array<TicketTypeResponse>;
};

export type GetApiV1ActivitiesByActivityIdTicketTypesResponse =
  GetApiV1ActivitiesByActivityIdTicketTypesResponses[keyof GetApiV1ActivitiesByActivityIdTicketTypesResponses];

export type PostApiV1ActivitiesByActivityIdTicketTypesData = {
  /**
   * 票種資料，可同時多張新增，最少要有一張
   */
  body: Array<TicketTypeRequestSchema>;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes";
};

export type PostApiV1ActivitiesByActivityIdTicketTypesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 非主辦單位，無法新增票種
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PostApiV1ActivitiesByActivityIdTicketTypesError =
  PostApiV1ActivitiesByActivityIdTicketTypesErrors[keyof PostApiV1ActivitiesByActivityIdTicketTypesErrors];

export type PostApiV1ActivitiesByActivityIdTicketTypesResponses = {
  /**
   * 新增票種成功，產生資料的筆數
   */
  201: {
    message?: string;
    status?: boolean;
    /**
     * 成功新增票種的數量
     */
    data?: string;
  };
};

export type PostApiV1ActivitiesByActivityIdTicketTypesResponse =
  PostApiV1ActivitiesByActivityIdTicketTypesResponses[keyof PostApiV1ActivitiesByActivityIdTicketTypesResponses];

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
    /**
     * 需要刪除的票種 id
     */
    ticketTypeId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes/{ticketTypeId}";
};

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 非主辦單位，無法刪除票種
   */
  403: ErrorResponse;
  /**
   * 活動不存在、該票種不存在、該票種不屬於此活動
   */
  404: ErrorResponse;
};

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdError =
  DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors[keyof DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors];

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses = {
  /**
   * 刪除票種成功
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponse =
  DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses[keyof DeleteApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses];

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdData = {
  /**
   * 編輯單一票種資料
   */
  body: TicketTypeRequestSchema;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
    /**
     * 需要修改的票種 id
     */
    ticketTypeId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/ticketTypes/{ticketTypeId}";
};

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未提供授權令牌
   */
  401: ErrorResponse;
  /**
   * 非主辦單位，無法編輯票種
   */
  403: ErrorResponse;
  /**
   * 活動不存在、該票種不存在、該票種不屬於此活動
   */
  404: ErrorResponse;
};

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdError =
  PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors[keyof PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdErrors];

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses = {
  /**
   * 更新票種成功
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponse =
  PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses[keyof PutApiV1ActivitiesByActivityIdTicketTypesByTicketTypeIdResponses];

export type GetApiV1ActivitiesByActivityIdData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}";
};

export type GetApiV1ActivitiesByActivityIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
};

export type GetApiV1ActivitiesByActivityIdError =
  GetApiV1ActivitiesByActivityIdErrors[keyof GetApiV1ActivitiesByActivityIdErrors];

export type GetApiV1ActivitiesByActivityIdResponses = {
  /**
   * 成功獲取活動資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: ActivityResponse;
  };
};

export type GetApiV1ActivitiesByActivityIdResponse =
  GetApiV1ActivitiesByActivityIdResponses[keyof GetApiV1ActivitiesByActivityIdResponses];

export type PutApiV1ActivitiesByActivityIdData = {
  body: EditActivityRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}";
};

export type PutApiV1ActivitiesByActivityIdErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
  /**
   * 活動不存在
   */
  404: ErrorResponse;
};

export type PutApiV1ActivitiesByActivityIdError =
  PutApiV1ActivitiesByActivityIdErrors[keyof PutApiV1ActivitiesByActivityIdErrors];

export type PutApiV1ActivitiesByActivityIdResponses = {
  /**
   * 成功更新活動資料
   */
  200: {
    message?: string;
    status?: boolean;
  };
};

export type PutApiV1ActivitiesByActivityIdResponse =
  PutApiV1ActivitiesByActivityIdResponses[keyof PutApiV1ActivitiesByActivityIdResponses];

export type PatchApiV1ActivitiesByActivityIdCategoriesData = {
  body: PatchActivityCategoriesRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/categories";
};

export type PatchApiV1ActivitiesByActivityIdCategoriesErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdCategoriesError =
  PatchApiV1ActivitiesByActivityIdCategoriesErrors[keyof PatchApiV1ActivitiesByActivityIdCategoriesErrors];

export type PatchApiV1ActivitiesByActivityIdCategoriesResponses = {
  /**
   * 成功設定活動主題
   */
  200: PatchActivityResponse;
};


export type PatchApiV1ActivitiesByActivityIdCategoriesResponse =
  PatchApiV1ActivitiesByActivityIdCategoriesResponses[keyof PatchApiV1ActivitiesByActivityIdCategoriesResponses];

export type PatchApiV1ActivitiesByActivityIdBasicData = {
  body: PatchActivityBasicRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/basic";
};

export type PatchApiV1ActivitiesByActivityIdBasicErrors = {

  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdBasicError =
  PatchApiV1ActivitiesByActivityIdBasicErrors[keyof PatchApiV1ActivitiesByActivityIdBasicErrors];

export type PatchApiV1ActivitiesByActivityIdBasicResponses = {
  /**
   * 成功設定活動基本資料
   */
  200: PatchActivityResponse;
};

export type PatchApiV1ActivitiesByActivityIdBasicResponse =
  PatchApiV1ActivitiesByActivityIdBasicResponses[keyof PatchApiV1ActivitiesByActivityIdBasicResponses];

export type PatchApiV1ActivitiesByActivityIdContentData = {
  body: PatchActivityContentRequest;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/content";
};

export type PatchApiV1ActivitiesByActivityIdContentErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdContentError =
  PatchApiV1ActivitiesByActivityIdContentErrors[keyof PatchApiV1ActivitiesByActivityIdContentErrors];

export type PatchApiV1ActivitiesByActivityIdContentResponses = {
  /**
   * 成功設定詳細內容
   */
  200: PatchActivityResponse;
};

export type PatchApiV1ActivitiesByActivityIdContentResponse =
  PatchApiV1ActivitiesByActivityIdContentResponses[keyof PatchApiV1ActivitiesByActivityIdContentResponses];

export type PatchApiV1ActivitiesByActivityIdPublishData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/publish";
};

export type PatchApiV1ActivitiesByActivityIdPublishErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdPublishError =
  PatchApiV1ActivitiesByActivityIdPublishErrors[keyof PatchApiV1ActivitiesByActivityIdPublishErrors];

export type PatchApiV1ActivitiesByActivityIdPublishResponses = {
  /**
   * 成功發布活動
   */
  200: PatchActivityStatusResponse;
};

export type PatchApiV1ActivitiesByActivityIdPublishResponse =
  PatchApiV1ActivitiesByActivityIdPublishResponses[keyof PatchApiV1ActivitiesByActivityIdPublishResponses];

export type PatchApiV1ActivitiesByActivityIdCancelData = {
  body?: never;
  path: {
    /**
     * 活動 ID
     */
    activityId: number;
  };
  query?: never;
  url: "/api/v1/activities/{activityId}/cancel";
};

export type PatchApiV1ActivitiesByActivityIdCancelErrors = {
  /**
   * 格式錯誤
   */
  400: ErrorResponse;
  /**
   * 未登入
   */
  401: ErrorResponse;
  /**
   * 無權限，非主辦單位成員
   */
  403: ErrorResponse;
};

export type PatchApiV1ActivitiesByActivityIdCancelError =
  PatchApiV1ActivitiesByActivityIdCancelErrors[keyof PatchApiV1ActivitiesByActivityIdCancelErrors];

export type PatchApiV1ActivitiesByActivityIdCancelResponses = {
  /**
   * 成功取消活動
   */
  200: PatchActivityStatusResponse;
};

export type PatchApiV1ActivitiesByActivityIdCancelResponse =
  PatchApiV1ActivitiesByActivityIdCancelResponses[keyof PatchApiV1ActivitiesByActivityIdCancelResponses];

export type GetApiV1CurrenciesData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/currencies";
};

export type GetApiV1CurrenciesResponses = {
  /**
   * A list of currencies
   */
  200: Array<CurrencyResponse>;
};

export type GetApiV1CurrenciesResponse =
  GetApiV1CurrenciesResponses[keyof GetApiV1CurrenciesResponses];

export type PostApiV1CurrenciesData = {
  body: CreateCurrencyRequest;
  path?: never;
  query?: never;
  url: "/api/v1/currencies";
};

export type PostApiV1CurrenciesErrors = {
  /**
   * Bad request
   */
  400: ErrorResponse;
};

export type PostApiV1CurrenciesError = PostApiV1CurrenciesErrors[keyof PostApiV1CurrenciesErrors];

export type PostApiV1CurrenciesResponses = {
  /**
   * The created currency
   */
  201: CurrencyResponse;
};

export type PostApiV1CurrenciesResponse =
  PostApiV1CurrenciesResponses[keyof PostApiV1CurrenciesResponses];

export type DeleteApiV1OrganizationsData = {
  body: DeleteOrganizationRequest;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type DeleteApiV1OrganizationsErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 找不到主辦單位
   */
  404: ErrorResponse;
};

export type DeleteApiV1OrganizationsError =
  DeleteApiV1OrganizationsErrors[keyof DeleteApiV1OrganizationsErrors];

export type DeleteApiV1OrganizationsResponses = {
  /**
   * 刪除成功
   */
  200: DeleteOrganizationResponse;
};

export type DeleteApiV1OrganizationsResponse =
  DeleteApiV1OrganizationsResponses[keyof DeleteApiV1OrganizationsResponses];

export type GetApiV1OrganizationsData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type GetApiV1OrganizationsErrors = {
  /**
   * 取得失敗
   */
  500: ErrorResponse;
};

export type GetApiV1OrganizationsError =
  GetApiV1OrganizationsErrors[keyof GetApiV1OrganizationsErrors];

export type GetApiV1OrganizationsResponses = {
  /**
   * 取得成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: Array<OrganizationResponse>;
  };
};

export type GetApiV1OrganizationsResponse =
  GetApiV1OrganizationsResponses[keyof GetApiV1OrganizationsResponses];

export type PostApiV1OrganizationsData = {
  body: CreateOrganizationRequest;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type PostApiV1OrganizationsErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PostApiV1OrganizationsError =
  PostApiV1OrganizationsErrors[keyof PostApiV1OrganizationsErrors];

export type PostApiV1OrganizationsResponses = {
  /**
   * 創建成功
   */
  200: CreateOrganizationResponse;
};

export type PostApiV1OrganizationsResponse =
  PostApiV1OrganizationsResponses[keyof PostApiV1OrganizationsResponses];

export type PutApiV1OrganizationsData = {
  body: UpdateOrganizationRequest;
  path?: never;
  query?: never;
  url: "/api/v1/organizations";
};

export type PutApiV1OrganizationsErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 找不到主辦單位
   */
  404: ErrorResponse;
};

export type PutApiV1OrganizationsError =
  PutApiV1OrganizationsErrors[keyof PutApiV1OrganizationsErrors];

export type PutApiV1OrganizationsResponses = {
  /**
   * 更新成功
   */
  200: UpdateOrganizationResponse;
};

export type PutApiV1OrganizationsResponse =
  PutApiV1OrganizationsResponses[keyof PutApiV1OrganizationsResponses];

export type GetApiV1OrganizationsByOrganizationIdData = {
  body?: never;
  path: {
    /**
     * 主辦單位ID
     */
    organizationId: number;
  };
  query?: never;
  url: "/api/v1/organizations/{organizationId}";
};

export type GetApiV1OrganizationsByOrganizationIdErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 找不到主辦單位
   */
  404: ErrorResponse;
};

export type GetApiV1OrganizationsByOrganizationIdError =
  GetApiV1OrganizationsByOrganizationIdErrors[keyof GetApiV1OrganizationsByOrganizationIdErrors];

export type GetApiV1OrganizationsByOrganizationIdResponses = {
  /**
   * 取得成功
   */
  200: {
    message?: string;
    status?: boolean;
    data?: OrganizationResponse;
  };
};

export type GetApiV1OrganizationsByOrganizationIdResponse =
  GetApiV1OrganizationsByOrganizationIdResponses[keyof GetApiV1OrganizationsByOrganizationIdResponses];

export type PostApiV1UsersSignupData = {
  body: SignupRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/signup";
};

export type PostApiV1UsersSignupErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PostApiV1UsersSignupError =
  PostApiV1UsersSignupErrors[keyof PostApiV1UsersSignupErrors];

export type PostApiV1UsersSignupResponses = {
  /**
   * 註冊成功
   */
  201: SignupResponse;
};

export type PostApiV1UsersSignupResponse =
  PostApiV1UsersSignupResponses[keyof PostApiV1UsersSignupResponses];

export type PostApiV1UsersLoginData = {
  body: LoginRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/login";
};

export type PostApiV1UsersLoginErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PostApiV1UsersLoginError = PostApiV1UsersLoginErrors[keyof PostApiV1UsersLoginErrors];

export type PostApiV1UsersLoginResponses = {
  /**
   * 登入成功
   */
  200: LoginResponse;
};

export type PostApiV1UsersLoginResponse =
  PostApiV1UsersLoginResponses[keyof PostApiV1UsersLoginResponses];

export type GetApiV1UsersGoogleLoginData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/users/google/login";
};

export type GetApiV1UsersGoogleCallbackData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * Google 授權碼
     */
    code?: string;
  };
  url: "/api/v1/users/google/callback";
};

export type GetApiV1UsersGoogleCallbackResponses = {
  /**
   * 認證成功，返回HTML頁面自動傳送結果給前端並關閉窗口
   */
  200: unknown;
};

export type PutApiV1UsersForgetData = {
  body: ForgetRequestSchema;
  path?: never;
  query?: never;
  url: "/api/v1/users/forget";
};

export type PutApiV1UsersForgetErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
};

export type PutApiV1UsersForgetError = PutApiV1UsersForgetErrors[keyof PutApiV1UsersForgetErrors];

export type PutApiV1UsersForgetResponses = {
  /**
   * 發送成功
   */
  200: ResetPasswordResponse;
};

export type PutApiV1UsersForgetResponse =
  PutApiV1UsersForgetResponses[keyof PutApiV1UsersForgetResponses];

export type PutApiV1UsersResetPasswordData = {
  body: ResetPasswordRequestSchema;
  path?: never;
  query?: never;
  url: "/api/v1/users/resetPassword";
};

export type PutApiV1UsersResetPasswordErrors = {
  /**
   * 請求錯誤，可能是令牌過期或無效
   */
  400: ErrorResponse;
};

export type PutApiV1UsersResetPasswordError =
  PutApiV1UsersResetPasswordErrors[keyof PutApiV1UsersResetPasswordErrors];

export type PutApiV1UsersResetPasswordResponses = {
  /**
   * 更新成功
   */
  200: ResetPasswordResponse;
};

export type PutApiV1UsersResetPasswordResponse =
  PutApiV1UsersResetPasswordResponses[keyof PutApiV1UsersResetPasswordResponses];

export type GetApiV1UsersProfileData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/v1/users/profile";
};

export type GetApiV1UsersProfileErrors = {
  /**
   * 未授權
   */
  401: ErrorResponse;
  /**
   * 用戶不存在
   */
  404: ErrorResponse;
};

export type GetApiV1UsersProfileError =
  GetApiV1UsersProfileErrors[keyof GetApiV1UsersProfileErrors];

export type GetApiV1UsersProfileResponses = {
  /**
   * 成功獲取用戶資料
   */
  200: {
    message?: string;
    status?: boolean;
    data?: UserResponse;
  };
};

export type GetApiV1UsersProfileResponse =
  GetApiV1UsersProfileResponses[keyof GetApiV1UsersProfileResponses];

export type PutApiV1UsersProfileData = {
  body?: UpdateProfileRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/profile";
};

export type PutApiV1UsersProfileErrors = {
  /**
   * 請求錯誤
   */
  400: ErrorResponse;
  /**
   * 未授權
   */
  401: ErrorResponse;
  /**
   * 用戶不存在
   */
  404: ErrorResponse;
};

export type PutApiV1UsersProfileError =
  PutApiV1UsersProfileErrors[keyof PutApiV1UsersProfileErrors];

export type PutApiV1UsersProfileResponses = {
  /**
   * 更新成功
   */
  200: UpdateProfileResponse;
};

export type PutApiV1UsersProfileResponse =
  PutApiV1UsersProfileResponses[keyof PutApiV1UsersProfileResponses];

export type PostApiV1UsersProfileAvatarData = {
  body: UploadAvatarRequest;
  path?: never;
  query?: never;
  url: "/api/v1/users/profile/avatar";
};

export type PostApiV1UsersProfileAvatarErrors = {
  /**
   * 錯誤的請求，例如沒有圖片、圖片上傳失敗等
   */
  400: ErrorResponse;
  /**
   * 未授權
   */
  401: ErrorResponse;
};

export type PostApiV1UsersProfileAvatarError =
  PostApiV1UsersProfileAvatarErrors[keyof PostApiV1UsersProfileAvatarErrors];

export type PostApiV1UsersProfileAvatarResponses = {
  /**
   * 上傳成功
   */
  200: UploadAvatarResponse;
};

export type PostApiV1UsersProfileAvatarResponse =
  PostApiV1UsersProfileAvatarResponses[keyof PostApiV1UsersProfileAvatarResponses];

export type ClientOptions = {
  baseUrl: "https://eventa-backend-pgun.onrender.com" | (string & {});
};
